<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ys.springboot.dao.StudentMapper">

    <!--resultMap的作用：
    1。当数据库中字段名称与实体类对象的属性名不一致时，可以进行转换
    2。当前查询的结果没有对应一个表的时候，可以自定义一个结果集
    -->
    <resultMap id="BaseResultMap" type="com.ys.springboot.domain.Student">
        <!--
        id标签只能对应主键字段；
        result标签是除了主键字段以外的标签
        -->
        <!--
        column数据库中的字段名称；
        property映射对象的属性名称；
        jdbcType列中数据库中字段的类型（可以省略不写）
        -->
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="age" jdbcType="INTEGER" property="age"/>
    </resultMap>

    <!--将公共的部分抽取出来，便于复用-->
    <sql id="Base_Column_List">
        id, name, age
    </sql>

    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_student
        where id = #{id,jdbcType=INTEGER}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete
        from t_student
        where id = #{id,jdbcType=INTEGER}
    </delete>

    <insert id="insert" parameterType="com.ys.springboot.domain.Student">
        insert into t_student (id, name, age)
        values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{age,jdbcType=INTEGER})
    </insert>
    <insert id="insertSelective" parameterType="com.ys.springboot.domain.Student">
        insert into t_student
            /*
            suffixOverrides的作用是去除多余逗号
              */
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="age != null">
                age,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="age != null">
                #{age,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.ys.springboot.domain.Student">
        update t_student
        <set>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="age != null">
                age = #{age,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.ys.springboot.domain.Student">
        update t_student
        set name = #{name,jdbcType=VARCHAR},
            age  = #{age,jdbcType=INTEGER}
        where id = #{id,jdbcType=INTEGER}
    </update>
</mapper>